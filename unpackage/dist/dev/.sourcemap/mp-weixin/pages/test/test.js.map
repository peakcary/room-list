{"version":3,"file":"test.js","sources":["pages/test/test.vue","pages/test/test.vue?type=page"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <view class=\"header\">\r\n      <text class=\"title\">系统初始化测试</text>\r\n    </view>\r\n    \r\n    <view class=\"init-section\">\r\n      <view class=\"init-card\">\r\n        <view class=\"init-title\">🚀 数据库初始化</view>\r\n        <view class=\"init-desc\">创建示例房间、租户和租赁关系数据，用于测试系统功能</view>\r\n        <button class=\"init-btn-large\" @click=\"initDatabase\">\r\n          <text class=\"btn-text\">{{ initButtonText }}</text>\r\n        </button>\r\n        <view class=\"init-result\" :class=\"initResultClass\">{{ dbInitResult }}</view>\r\n      </view>\r\n    </view>\r\n    \r\n    <view class=\"test-section\">\r\n      <view class=\"section-header\">\r\n        <text class=\"section-title\">系统功能测试</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"testRoomManagement\">测试房间管理接口</button>\r\n        <text class=\"test-result\">{{ roomTestResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"addTestRoom\">添加测试房间</button>\r\n        <text class=\"test-result\">{{ addRoomResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"getRooms\">获取全部房间列表</button>\r\n        <text class=\"test-result\">{{ getRoomsResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"getAvailableRooms\">获取可租用房间</button>\r\n        <text class=\"test-result\">{{ availableRoomsResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"getRentedRooms\">获取已租用房间</button>\r\n        <text class=\"test-result\">{{ rentedRoomsResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn debug-btn\" @click=\"debugDatabase\">🔍 调试数据库状态</button>\r\n        <text class=\"test-result\">{{ debugResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn debug-btn\" @click=\"testCloudConnection\">🌐 测试云函数连接</button>\r\n        <text class=\"test-result\">{{ connectionResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn deploy-btn\" @click=\"goToSystemDeploy\">🚀 系统部署管理</button>\r\n        <text class=\"test-result\">一键部署和管理系统</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn reset-btn\" @click=\"forceResetDatabase\">🗑️ 强制重置数据库</button>\r\n        <text class=\"test-result\">{{ resetResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"fixDataInconsistencies\">修复数据不一致</button>\r\n        <text class=\"test-result\">{{ fixResult }}</text>\r\n      </view>\r\n      \r\n      <view class=\"test-item\">\r\n        <button class=\"test-btn\" @click=\"forceResetDatabase\">强制重置数据库</button>\r\n        <text class=\"test-result\">{{ resetResult }}</text>\r\n      </view>\r\n    </view>\r\n    \r\n    <view class=\"debug-info\">\r\n      <text class=\"debug-title\">调试信息：</text>\r\n      <text class=\"debug-text\">{{ debugInfo }}</text>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbInitResult: '',\r\n      initButtonText: '立即初始化',\r\n      initResultClass: '',\r\n      isInitializing: false,\r\n      roomTestResult: '',\r\n      addRoomResult: '',\r\n      getRoomsResult: '',\r\n      availableRoomsResult: '',\r\n      rentedRoomsResult: '',\r\n      debugResult: '',\r\n      fixResult: '',\r\n      resetResult: '',\r\n      debugInfo: '等待测试...',\r\n      connectionResult: ''\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 初始化数据库\r\n    async initDatabase() {\r\n      if (this.isInitializing) return;\r\n      \r\n      this.isInitializing = true;\r\n      this.initButtonText = '初始化中...';\r\n      this.dbInitResult = '正在创建示例数据...';\r\n      this.initResultClass = 'loading';\r\n      this.debugInfo = '正在初始化数据库...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'db-init',\r\n          data: {}\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          this.dbInitResult = '✅ 初始化成功！已创建示例房间、租户和租赁关系数据';\r\n          this.initResultClass = 'success';\r\n          this.initButtonText = '重新初始化';\r\n          this.debugInfo = '初始化完成，现在可以在房间列表中看到租户信息了';\r\n          \r\n          // 显示成功提示\r\n          uni.showToast({\r\n            title: '初始化成功',\r\n            icon: 'success'\r\n          });\r\n        } else {\r\n          this.dbInitResult = `❌ 初始化失败: ${result.result.message}`;\r\n          this.initResultClass = 'error';\r\n          this.initButtonText = '重试初始化';\r\n        }\r\n        \r\n        this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        \r\n      } catch (error) {\r\n        this.dbInitResult = `❌ 初始化失败: ${error.message}`;\r\n        this.initResultClass = 'error';\r\n        this.initButtonText = '重试初始化';\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('数据库初始化失败:', error);\r\n        \r\n        uni.showToast({\r\n          title: '初始化失败',\r\n          icon: 'none'\r\n        });\r\n      } finally {\r\n        this.isInitializing = false;\r\n      }\r\n    },\r\n    \r\n    // 测试房间管理接口\r\n    async testRoomManagement() {\r\n      this.roomTestResult = '测试中...';\r\n      this.debugInfo = '正在测试房间管理接口...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: {\r\n              pageSize: 10,\r\n              pageNum: 1\r\n            }\r\n          }\r\n        });\r\n        \r\n        this.roomTestResult = `测试成功: 找到 ${result.result.data?.total || 0} 个房间`;\r\n        this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        \r\n      } catch (error) {\r\n        this.roomTestResult = `测试失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('房间管理接口测试失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 添加测试房间\r\n    async addTestRoom() {\r\n      this.addRoomResult = '添加中...';\r\n      this.debugInfo = '正在添加测试房间...';\r\n      \r\n      try {\r\n        const testRoom = {\r\n          room_number: `TEST${Date.now()}`,\r\n          floor: 1,\r\n          area: 25,\r\n          rent_price: 1000,\r\n          status: 'available',\r\n          utilities: {\r\n            electricity_reading: 0,\r\n            water_reading: 0,\r\n            electricity_rate: 0.5,\r\n            water_rate: 3.0\r\n          }\r\n        };\r\n        \r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'addRoom',\r\n            data: testRoom\r\n          }\r\n        });\r\n        \r\n        this.addRoomResult = `添加成功: 房间号 ${testRoom.room_number}`;\r\n        this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        \r\n      } catch (error) {\r\n        this.addRoomResult = `添加失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('添加测试房间失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 获取房间列表\r\n    async getRooms() {\r\n      this.getRoomsResult = '获取中...';\r\n      this.debugInfo = '正在获取房间列表...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: {\r\n              pageSize: 10,\r\n              pageNum: 1\r\n            }\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          const rooms = result.result.data.list;\r\n          this.getRoomsResult = `获取成功: 共 ${result.result.data.total} 个房间`;\r\n          this.debugInfo = `房间列表: ${rooms.map(r => r.room_number).join(', ')}`;\r\n        } else {\r\n          this.getRoomsResult = `获取失败: ${result.result.message}`;\r\n          this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.getRoomsResult = `获取失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('获取房间列表失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 获取可租用房间\r\n    async getAvailableRooms() {\r\n      this.availableRoomsResult = '获取中...';\r\n      this.debugInfo = '正在获取可租用房间...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: {\r\n              status: 'available',\r\n              pageSize: 10,\r\n              pageNum: 1\r\n            }\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          const rooms = result.result.data.list;\r\n          this.availableRoomsResult = `获取成功: 共 ${result.result.data.total} 个可租用房间`;\r\n          this.debugInfo = `可租用房间: ${rooms.map(r => r.room_number).join(', ')}`;\r\n        } else {\r\n          this.availableRoomsResult = `获取失败: ${result.result.message}`;\r\n          this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.availableRoomsResult = `获取失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('获取可租用房间失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 获取已租用房间\r\n    async getRentedRooms() {\r\n      this.rentedRoomsResult = '获取中...';\r\n      this.debugInfo = '正在获取已租用房间...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: {\r\n              status: 'rented',\r\n              pageSize: 10,\r\n              pageNum: 1\r\n            }\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          const rooms = result.result.data.list;\r\n          this.rentedRoomsResult = `获取成功: 共 ${result.result.data.total} 个已租用房间`;\r\n          this.debugInfo = `已租用房间: ${rooms.map(r => r.room_number + (r.current_tenant ? ` (${r.current_tenant.name})` : '')).join(', ')}`;\r\n        } else {\r\n          this.rentedRoomsResult = `获取失败: ${result.result.message}`;\r\n          this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.rentedRoomsResult = `获取失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('获取已租用房间失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 调试数据库状态\r\n    async debugDatabase() {\r\n      this.debugResult = '调试中...';\r\n      this.debugInfo = '正在检查数据库状态...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'debugDatabase',\r\n            data: {}\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          const { debug_info, inconsistencies } = result.result.data;\r\n          this.debugResult = `调试完成: 房间${debug_info.rooms.total}个, 租赁${debug_info.rentals.total}个, 租户${debug_info.tenants.total}个, 数据不一致${inconsistencies.length}处`;\r\n          \r\n          let debugText = `=== 数据库状态 ===\\n`;\r\n          debugText += `房间总数: ${debug_info.rooms.total}\\n`;\r\n          debugText += `租赁总数: ${debug_info.rentals.total}\\n`;\r\n          debugText += `租户总数: ${debug_info.tenants.total}\\n\\n`;\r\n          \r\n          if (inconsistencies.length > 0) {\r\n            debugText += `=== 数据不一致问题 ===\\n`;\r\n            inconsistencies.forEach((issue, index) => {\r\n              debugText += `${index + 1}. ${issue.issue}\\n`;\r\n              debugText += `   房间: ${issue.room_number} (${issue.room_id})\\n`;\r\n              if (issue.current_rental_id) {\r\n                debugText += `   租赁ID: ${issue.current_rental_id}\\n`;\r\n              }\r\n              debugText += `\\n`;\r\n            });\r\n          } else {\r\n            debugText += `✅ 数据一致性检查通过\\n`;\r\n          }\r\n          \r\n          debugText += `\\n=== 房间详情 ===\\n`;\r\n          debug_info.rooms.data.forEach(room => {\r\n            debugText += `${room.room_number}: ${room.status}`;\r\n            if (room.current_rental_id) {\r\n              debugText += ` (租赁ID: ${room.current_rental_id})`;\r\n            }\r\n            debugText += `\\n`;\r\n          });\r\n          \r\n          this.debugInfo = debugText;\r\n          \r\n        } else {\r\n          this.debugResult = `调试失败: ${result.result.message}`;\r\n          this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.debugResult = `调试失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('调试数据库失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 修复数据不一致\r\n    async fixDataInconsistencies() {\r\n      this.fixResult = '修复中...';\r\n      this.debugInfo = '正在修复数据不一致问题...';\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'fixDataInconsistencies',\r\n            data: {}\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          const { fixes_applied, fixes } = result.result.data;\r\n          this.fixResult = `✅ 修复完成！共处理 ${fixes_applied} 个问题`;\r\n          \r\n          let debugText = `=== 数据修复报告 ===\\n`;\r\n          debugText += `修复问题数量: ${fixes_applied}\\n\\n`;\r\n          \r\n          if (fixes.length > 0) {\r\n            debugText += `=== 修复详情 ===\\n`;\r\n            fixes.forEach((fix, index) => {\r\n              debugText += `${index + 1}. ${fix.action}\\n`;\r\n              if (fix.room_number) {\r\n                debugText += `   房间: ${fix.room_number}\\n`;\r\n              }\r\n              if (fix.rental_id) {\r\n                debugText += `   租赁ID: ${fix.rental_id}\\n`;\r\n              }\r\n              debugText += `   类型: ${fix.type}\\n\\n`;\r\n            });\r\n          } else {\r\n            debugText += `✅ 未发现需要修复的问题\\n`;\r\n          }\r\n          \r\n          this.debugInfo = debugText;\r\n          \r\n          uni.showToast({\r\n            title: '修复完成',\r\n            icon: 'success'\r\n          });\r\n          \r\n        } else {\r\n          this.fixResult = `❌ 修复失败: ${result.result.message}`;\r\n          this.debugInfo = JSON.stringify(result.result, null, 2);\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.fixResult = `修复失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('修复数据不一致失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 强制重置数据库\r\n    async forceResetDatabase() {\r\n      this.resetResult = '重置中...';\r\n      this.debugInfo = '正在强制重置数据库...';\r\n      \r\n      try {\r\n        uni.showModal({\r\n          title: '确认重置',\r\n          content: '这将删除所有数据并重新创建，确定继续吗？',\r\n          success: async (res) => {\r\n            if (res.confirm) {\r\n              const result = await uniCloud.callFunction({\r\n                name: 'db-init',\r\n                data: {\r\n                  forceReset: true\r\n                }\r\n              });\r\n              \r\n              if (result.result.code === 0) {\r\n                this.resetResult = '✅ 数据库重置成功！';\r\n                this.debugInfo = '数据库已重置，所有旧数据已清空，新的示例数据已创建';\r\n                \r\n                uni.showToast({\r\n                  title: '重置成功',\r\n                  icon: 'success'\r\n                });\r\n              } else {\r\n                this.resetResult = `❌ 重置失败: ${result.result.message}`;\r\n                this.debugInfo = JSON.stringify(result.result, null, 2);\r\n              }\r\n            } else {\r\n              this.resetResult = '重置已取消';\r\n              this.debugInfo = '用户取消了重置操作';\r\n            }\r\n          }\r\n        });\r\n        \r\n      } catch (error) {\r\n        this.resetResult = `重置失败: ${error.message}`;\r\n        this.debugInfo = `Error: ${JSON.stringify(error, null, 2)}`;\r\n        console.error('强制重置数据库失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 跳转到系统部署管理页面\r\n    goToSystemDeploy() {\r\n      uni.navigateTo({\r\n        url: '/pages/system-deploy/system-deploy'\r\n      });\r\n    },\r\n    \r\n    // 测试云函数连接\r\n    async testCloudConnection() {\r\n      this.connectionResult = '测试中...';\r\n      console.log('开始测试云函数连接');\r\n      \r\n      try {\r\n        // 检查 uniCloud 是否已初始化\r\n        if (typeof uniCloud === 'undefined') {\r\n          this.connectionResult = '❌ uniCloud 未定义';\r\n          return;\r\n        }\r\n        \r\n        console.log('uniCloud 对象存在，开始调用云函数');\r\n        \r\n        // 测试最简单的云函数调用\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: { pageSize: 1, pageNum: 1 }\r\n          }\r\n        });\r\n        \r\n        console.log('云函数调用结果:', result);\r\n        \r\n        if (result.result && result.result.code === 0) {\r\n          this.connectionResult = `✅ 连接成功！返回数据: ${JSON.stringify(result.result.data).substring(0, 100)}...`;\r\n        } else {\r\n          this.connectionResult = `⚠️ 云函数返回错误: ${result.result ? result.result.message : '未知错误'}`;\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('云函数连接测试失败:', error);\r\n        \r\n        if (error.message && error.message.includes('request:fail')) {\r\n          this.connectionResult = `❌ 网络请求失败: ${error.message}`;\r\n        } else if (error.message && error.message.includes('not found')) {\r\n          this.connectionResult = '❌ 云函数不存在或未部署';\r\n        } else {\r\n          this.connectionResult = `❌ 连接失败: ${error.message}`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  padding: 40rpx;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.title {\r\n  font-size: 48rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.init-section {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.init-card {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 20rpx;\r\n  padding: 40rpx;\r\n  text-align: center;\r\n  color: white;\r\n  box-shadow: 0 8rpx 25rpx rgba(0,0,0,0.15);\r\n}\r\n\r\n.init-title {\r\n  font-size: 36rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.init-desc {\r\n  font-size: 26rpx;\r\n  opacity: 0.9;\r\n  margin-bottom: 30rpx;\r\n  line-height: 1.5;\r\n}\r\n\r\n.init-btn-large {\r\n  background-color: rgba(255,255,255,0.2);\r\n  border: 2rpx solid rgba(255,255,255,0.5);\r\n  border-radius: 50rpx;\r\n  padding: 20rpx 40rpx;\r\n  margin-bottom: 24rpx;\r\n  backdrop-filter: blur(10rpx);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.init-btn-large:active {\r\n  transform: scale(0.95);\r\n  background-color: rgba(255,255,255,0.3);\r\n}\r\n\r\n.btn-text {\r\n  color: white;\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.init-result {\r\n  font-size: 28rpx;\r\n  padding: 16rpx 20rpx;\r\n  border-radius: 12rpx;\r\n  margin-top: 16rpx;\r\n  background-color: rgba(255,255,255,0.1);\r\n  backdrop-filter: blur(5rpx);\r\n}\r\n\r\n.init-result.loading {\r\n  color: #fff3cd;\r\n  background-color: rgba(255,243,205,0.2);\r\n}\r\n\r\n.init-result.success {\r\n  color: #d1edff;\r\n  background-color: rgba(209,237,255,0.2);\r\n}\r\n\r\n.init-result.error {\r\n  color: #f8d7da;\r\n  background-color: rgba(248,215,218,0.2);\r\n}\r\n\r\n.section-header {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.section-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.test-section {\r\n  background-color: #fff;\r\n  border-radius: 16rpx;\r\n  padding: 40rpx;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.test-item {\r\n  margin-bottom: 40rpx;\r\n  padding-bottom: 30rpx;\r\n  border-bottom: 1rpx solid #eee;\r\n}\r\n\r\n.test-item:last-child {\r\n  margin-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.test-btn {\r\n  width: 100%;\r\n  padding: 30rpx;\r\n  background-color: #007AFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 12rpx;\r\n  font-size: 32rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.test-result {\r\n  display: block;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  word-break: break-all;\r\n}\r\n\r\n.debug-info {\r\n  background-color: #fff;\r\n  border-radius: 16rpx;\r\n  padding: 40rpx;\r\n}\r\n\r\n.debug-title {\r\n  display: block;\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.debug-text {\r\n  display: block;\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n  line-height: 1.5;\r\n}\r\n\r\n.debug-btn {\r\n  background-color: #ff9500 !important;\r\n}\r\n\r\n.deploy-btn {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;\r\n  color: white !important;\r\n}\r\n</style>","import MiniProgramPage from '/Users/peakom/Documents/room-list/pages/test/test.vue'\nwx.createPage(MiniProgramPage)"],"names":["uniCloud","uni"],"mappings":"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"}