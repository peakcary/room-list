{"version":3,"file":"system-deploy.js","sources":["pages/system-deploy/system-deploy.vue","pages/system-deploy/system-deploy.vue?type=page"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <view class=\"header\">\r\n      <view class=\"title\">🚀 系统部署管理</view>\r\n      <view class=\"subtitle\">一键完成云函数部署和数据库初始化</view>\r\n    </view>\r\n\r\n    <!-- 系统状态检查 -->\r\n    <view class=\"section\">\r\n      <view class=\"section-title\">📊 系统状态检查</view>\r\n      <view class=\"status-card\">\r\n        <view class=\"status-item\">\r\n          <view class=\"status-label\">云函数状态</view>\r\n          <view class=\"status-value\" :class=\"systemStatus.cloudFunction.class\">\r\n            {{ systemStatus.cloudFunction.text }}\r\n          </view>\r\n        </view>\r\n        <view class=\"status-item\">\r\n          <view class=\"status-label\">数据库状态</view>\r\n          <view class=\"status-value\" :class=\"systemStatus.database.class\">\r\n            {{ systemStatus.database.text }}\r\n          </view>\r\n        </view>\r\n        <view class=\"status-item\">\r\n          <view class=\"status-label\">示例数据</view>\r\n          <view class=\"status-value\" :class=\"systemStatus.sampleData.class\">\r\n            {{ systemStatus.sampleData.text }}\r\n          </view>\r\n        </view>\r\n      </view>\r\n      <button class=\"check-btn\" @click=\"checkSystemStatus\" :disabled=\"loading\">\r\n        {{ loading ? '检查中...' : '🔍 检查系统状态' }}\r\n      </button>\r\n    </view>\r\n\r\n    <!-- 数据库初始化 -->\r\n    <view class=\"section\">\r\n      <view class=\"section-title\">🗄️ 数据库初始化</view>\r\n      <view class=\"action-card\">\r\n        <view class=\"action-desc\">初始化数据库集合和示例数据</view>\r\n        <view class=\"action-buttons\">\r\n          <button class=\"action-btn primary\" @click=\"initDatabase(false)\" :disabled=\"loading\">\r\n            📚 创建示例数据\r\n          </button>\r\n          <button class=\"action-btn danger\" @click=\"initDatabase(true)\" :disabled=\"loading\">\r\n            🔄 重置所有数据\r\n          </button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 系统测试 -->\r\n    <view class=\"section\">\r\n      <view class=\"section-title\">🧪 功能测试</view>\r\n      <view class=\"test-grid\">\r\n        <button class=\"test-btn\" @click=\"testFunction('getRooms')\" :disabled=\"loading\">\r\n          测试房间列表\r\n        </button>\r\n        <button class=\"test-btn\" @click=\"testFunction('getIncomeStatistics')\" :disabled=\"loading\">\r\n          测试收入统计\r\n        </button>\r\n        <button class=\"test-btn\" @click=\"testFunction('getRoomOccupancyStatistics')\" :disabled=\"loading\">\r\n          测试出租统计\r\n        </button>\r\n        <button class=\"test-btn\" @click=\"testFunction('debugDatabase')\" :disabled=\"loading\">\r\n          调试数据库\r\n        </button>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 数据修复 -->\r\n    <view class=\"section\">\r\n      <view class=\"section-title\">🔧 数据修复</view>\r\n      <view class=\"action-card\">\r\n        <view class=\"action-desc\">修复数据不一致问题</view>\r\n        <button class=\"action-btn warning\" @click=\"fixDataInconsistencies\" :disabled=\"loading\">\r\n          🛠️ 修复数据不一致\r\n        </button>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 操作日志 -->\r\n    <view class=\"section\">\r\n      <view class=\"section-title\">📋 操作日志</view>\r\n      <scroll-view class=\"log-container\" scroll-y=\"true\">\r\n        <view class=\"log-item\" v-for=\"(log, index) in logs\" :key=\"index\" :class=\"log.type\">\r\n          <view class=\"log-time\">{{ log.time }}</view>\r\n          <view class=\"log-content\">{{ log.message }}</view>\r\n        </view>\r\n        <view class=\"no-logs\" v-if=\"logs.length === 0\">\r\n          暂无操作日志\r\n        </view>\r\n      </scroll-view>\r\n      <button class=\"clear-btn\" @click=\"clearLogs\">清空日志</button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      systemStatus: {\r\n        cloudFunction: { text: '未检查', class: 'unknown' },\r\n        database: { text: '未检查', class: 'unknown' },\r\n        sampleData: { text: '未检查', class: 'unknown' }\r\n      },\r\n      logs: []\r\n    }\r\n  },\r\n  \r\n  onLoad() {\r\n    this.addLog('info', '系统部署管理页面已加载');\r\n    // 自动检查系统状态\r\n    setTimeout(() => {\r\n      this.checkSystemStatus();\r\n    }, 1000);\r\n  },\r\n  \r\n  methods: {\r\n    // 添加日志\r\n    addLog(type, message) {\r\n      const now = new Date();\r\n      const time = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\r\n      \r\n      this.logs.unshift({\r\n        type,\r\n        message,\r\n        time\r\n      });\r\n      \r\n      // 限制日志数量\r\n      if (this.logs.length > 50) {\r\n        this.logs = this.logs.slice(0, 50);\r\n      }\r\n    },\r\n    \r\n    // 检查系统状态\r\n    async checkSystemStatus() {\r\n      this.loading = true;\r\n      this.addLog('info', '开始检查系统状态...');\r\n      \r\n      try {\r\n        // 检查云函数状态\r\n        await this.checkCloudFunction();\r\n        \r\n        // 检查数据库状态\r\n        await this.checkDatabase();\r\n        \r\n        // 检查示例数据\r\n        await this.checkSampleData();\r\n        \r\n        this.addLog('success', '系统状态检查完成');\r\n      } catch (error) {\r\n        this.addLog('error', `系统状态检查失败: ${error.message}`);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 检查云函数状态\r\n    async checkCloudFunction() {\r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: { pageSize: 1, pageNum: 1 }\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          this.systemStatus.cloudFunction = { text: '正常', class: 'success' };\r\n          this.addLog('success', '云函数连接正常');\r\n        } else {\r\n          this.systemStatus.cloudFunction = { text: '异常', class: 'error' };\r\n          this.addLog('error', `云函数异常: ${result.result.message}`);\r\n        }\r\n      } catch (error) {\r\n        this.systemStatus.cloudFunction = { text: '未部署', class: 'error' };\r\n        this.addLog('error', `云函数未部署或配置错误: ${error.message}`);\r\n      }\r\n    },\r\n    \r\n    // 检查数据库状态\r\n    async checkDatabase() {\r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'debugDatabase'\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          this.systemStatus.database = { text: '正常', class: 'success' };\r\n          this.addLog('success', '数据库连接正常');\r\n        } else {\r\n          this.systemStatus.database = { text: '异常', class: 'warning' };\r\n          this.addLog('warning', `数据库异常: ${result.result.message}`);\r\n        }\r\n      } catch (error) {\r\n        this.systemStatus.database = { text: '错误', class: 'error' };\r\n        this.addLog('error', `数据库检查失败: ${error.message}`);\r\n      }\r\n    },\r\n    \r\n    // 检查示例数据\r\n    async checkSampleData() {\r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: 'getRooms',\r\n            data: { pageSize: 10, pageNum: 1 }\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          const total = result.result.data.total;\r\n          if (total > 0) {\r\n            this.systemStatus.sampleData = { text: `已有${total}条数据`, class: 'success' };\r\n            this.addLog('success', `发现${total}条房间数据`);\r\n          } else {\r\n            this.systemStatus.sampleData = { text: '无数据', class: 'warning' };\r\n            this.addLog('warning', '数据库中没有房间数据');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.systemStatus.sampleData = { text: '检查失败', class: 'error' };\r\n        this.addLog('error', `示例数据检查失败: ${error.message}`);\r\n      }\r\n    },\r\n    \r\n    // 初始化数据库\r\n    async initDatabase(forceReset = false) {\r\n      const action = forceReset ? '重置数据库' : '初始化数据库';\r\n      \r\n      uni.showModal({\r\n        title: '确认操作',\r\n        content: `确定要${action}吗？${forceReset ? '这将删除所有现有数据！' : ''}`,\r\n        success: async (res) => {\r\n          if (res.confirm) {\r\n            await this.performDatabaseInit(forceReset);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 执行数据库初始化\r\n    async performDatabaseInit(forceReset) {\r\n      this.loading = true;\r\n      this.addLog('info', `开始${forceReset ? '重置' : '初始化'}数据库...`);\r\n      \r\n      try {\r\n        const result = await uniCloud.callFunction({\r\n          name: 'db-init',\r\n          data: { forceReset }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          this.addLog('success', `数据库${forceReset ? '重置' : '初始化'}成功`);\r\n          uni.showToast({\r\n            title: '操作成功',\r\n            icon: 'success'\r\n          });\r\n          // 重新检查状态\r\n          setTimeout(() => {\r\n            this.checkSystemStatus();\r\n          }, 2000);\r\n        } else {\r\n          this.addLog('error', `数据库操作失败: ${result.result.message}`);\r\n          uni.showToast({\r\n            title: '操作失败',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        this.addLog('error', `数据库操作异常: ${error.message}`);\r\n        uni.showToast({\r\n          title: '操作异常',\r\n          icon: 'error'\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 测试功能\r\n    async testFunction(functionName) {\r\n      this.loading = true;\r\n      this.addLog('info', `测试功能: ${functionName}`);\r\n      \r\n      try {\r\n        let testData = {};\r\n        \r\n        // 根据不同功能设置测试数据\r\n        switch (functionName) {\r\n          case 'getRooms':\r\n            testData = { pageSize: 10, pageNum: 1 };\r\n            break;\r\n          case 'getIncomeStatistics':\r\n            testData = { type: 'monthly' };\r\n            break;\r\n          case 'getRoomOccupancyStatistics':\r\n            testData = {};\r\n            break;\r\n          case 'debugDatabase':\r\n            testData = {};\r\n            break;\r\n        }\r\n        \r\n        const result = await uniCloud.callFunction({\r\n          name: 'room-management',\r\n          data: {\r\n            action: functionName,\r\n            data: testData\r\n          }\r\n        });\r\n        \r\n        if (result.result.code === 0) {\r\n          this.addLog('success', `${functionName} 测试成功`);\r\n          console.log(`${functionName} 结果:`, result.result.data);\r\n          \r\n          uni.showModal({\r\n            title: '测试成功',\r\n            content: `${functionName} 功能正常，详细结果请查看控制台`,\r\n            showCancel: false\r\n          });\r\n        } else {\r\n          this.addLog('error', `${functionName} 测试失败: ${result.result.message}`);\r\n          uni.showModal({\r\n            title: '测试失败',\r\n            content: result.result.message,\r\n            showCancel: false\r\n          });\r\n        }\r\n      } catch (error) {\r\n        this.addLog('error', `${functionName} 测试异常: ${error.message}`);\r\n        uni.showModal({\r\n          title: '测试异常',\r\n          content: error.message,\r\n          showCancel: false\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 修复数据不一致\r\n    async fixDataInconsistencies() {\r\n      uni.showModal({\r\n        title: '确认修复',\r\n        content: '确定要修复数据不一致问题吗？',\r\n        success: async (res) => {\r\n          if (res.confirm) {\r\n            this.loading = true;\r\n            this.addLog('info', '开始修复数据不一致问题...');\r\n            \r\n            try {\r\n              const result = await uniCloud.callFunction({\r\n                name: 'room-management',\r\n                data: {\r\n                  action: 'fixDataInconsistencies'\r\n                }\r\n              });\r\n              \r\n              if (result.result.code === 0) {\r\n                const fixes = result.result.data.fixes_applied;\r\n                this.addLog('success', `数据修复完成，共修复${fixes}个问题`);\r\n                uni.showToast({\r\n                  title: `修复了${fixes}个问题`,\r\n                  icon: 'success'\r\n                });\r\n              } else {\r\n                this.addLog('error', `数据修复失败: ${result.result.message}`);\r\n                uni.showToast({\r\n                  title: '修复失败',\r\n                  icon: 'error'\r\n                });\r\n              }\r\n            } catch (error) {\r\n              this.addLog('error', `数据修复异常: ${error.message}`);\r\n              uni.showToast({\r\n                title: '修复异常',\r\n                icon: 'error'\r\n              });\r\n            } finally {\r\n              this.loading = false;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 清空日志\r\n    clearLogs() {\r\n      this.logs = [];\r\n      this.addLog('info', '日志已清空');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  padding: 20rpx;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  padding: 40rpx 20rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 20rpx;\r\n  color: white;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.title {\r\n  font-size: 48rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 12rpx;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 28rpx;\r\n  opacity: 0.9;\r\n}\r\n\r\n.section {\r\n  background: white;\r\n  border-radius: 16rpx;\r\n  padding: 30rpx;\r\n  margin-bottom: 30rpx;\r\n  box-shadow: 0 4rpx 12rpx rgba(0,0,0,0.05);\r\n}\r\n\r\n.section-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 24rpx;\r\n}\r\n\r\n/* 状态卡片 */\r\n.status-card {\r\n  background: #f8f9fa;\r\n  border-radius: 12rpx;\r\n  padding: 24rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.status-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16rpx 0;\r\n  border-bottom: 1rpx solid #eee;\r\n}\r\n\r\n.status-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.status-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n}\r\n\r\n.status-value {\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n  padding: 8rpx 16rpx;\r\n  border-radius: 16rpx;\r\n}\r\n\r\n.status-value.success {\r\n  background: #e8f5e8;\r\n  color: #4caf50;\r\n}\r\n\r\n.status-value.warning {\r\n  background: #fff3cd;\r\n  color: #f57c00;\r\n}\r\n\r\n.status-value.error {\r\n  background: #ffebee;\r\n  color: #f44336;\r\n}\r\n\r\n.status-value.unknown {\r\n  background: #f0f0f0;\r\n  color: #999;\r\n}\r\n\r\n/* 按钮样式 */\r\n.check-btn {\r\n  width: 100%;\r\n  padding: 24rpx;\r\n  background: #007AFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 12rpx;\r\n  font-size: 28rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.check-btn[disabled] {\r\n  background: #ccc;\r\n}\r\n\r\n.action-card {\r\n  background: #f8f9fa;\r\n  border-radius: 12rpx;\r\n  padding: 24rpx;\r\n}\r\n\r\n.action-desc {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 16rpx;\r\n}\r\n\r\n.action-btn {\r\n  flex: 1;\r\n  padding: 20rpx;\r\n  border: none;\r\n  border-radius: 12rpx;\r\n  font-size: 26rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.action-btn.primary {\r\n  background: #007AFF;\r\n  color: white;\r\n}\r\n\r\n.action-btn.danger {\r\n  background: #ff4d4f;\r\n  color: white;\r\n}\r\n\r\n.action-btn.warning {\r\n  background: #faad14;\r\n  color: white;\r\n}\r\n\r\n.action-btn[disabled] {\r\n  background: #ccc;\r\n  color: #999;\r\n}\r\n\r\n/* 测试按钮网格 */\r\n.test-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 16rpx;\r\n}\r\n\r\n.test-btn {\r\n  padding: 20rpx;\r\n  background: #f0f0f0;\r\n  border: none;\r\n  border-radius: 12rpx;\r\n  font-size: 26rpx;\r\n  color: #333;\r\n}\r\n\r\n.test-btn[disabled] {\r\n  background: #e0e0e0;\r\n  color: #999;\r\n}\r\n\r\n/* 日志容器 */\r\n.log-container {\r\n  height: 400rpx;\r\n  background: #1a1a1a;\r\n  border-radius: 12rpx;\r\n  padding: 20rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.log-item {\r\n  margin-bottom: 12rpx;\r\n  font-size: 24rpx;\r\n  line-height: 1.4;\r\n}\r\n\r\n.log-item.info {\r\n  color: #e3f2fd;\r\n}\r\n\r\n.log-item.success {\r\n  color: #4caf50;\r\n}\r\n\r\n.log-item.warning {\r\n  color: #ff9800;\r\n}\r\n\r\n.log-item.error {\r\n  color: #f44336;\r\n}\r\n\r\n.log-time {\r\n  color: #999;\r\n  font-size: 22rpx;\r\n  margin-right: 12rpx;\r\n}\r\n\r\n.log-content {\r\n  display: inline;\r\n}\r\n\r\n.no-logs {\r\n  color: #666;\r\n  text-align: center;\r\n  padding: 60rpx 0;\r\n  font-size: 26rpx;\r\n}\r\n\r\n.clear-btn {\r\n  width: 100%;\r\n  padding: 16rpx;\r\n  background: #666;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8rpx;\r\n  font-size: 24rpx;\r\n}\r\n</style>","import MiniProgramPage from '/Users/peakom/Documents/room-list/pages/system-deploy/system-deploy.vue'\nwx.createPage(MiniProgramPage)"],"names":["uniCloud","uni"],"mappings":"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"}