{"version":3,"file":"cloud-init.js","sources":["utils/cloud-init.js"],"sourcesContent":["/**\r\n * uniCloud 初始化工具\r\n * 解决真机调试正常，体验版异常的问题\r\n */\r\n\r\n// 云服务空间配置\r\nconst CLOUD_CONFIG = {\r\n  provider: 'aliyun',\r\n  spaceId: 'mp-82beb92d-779d-44d1-a1d3-7fee8609024d',\r\n  clientSecret: '950wKtihe/ZN9Q4B8lYudg==',\r\n  endpoint: 'https://api.next.bspapp.com'\r\n}\r\n\r\n/**\r\n * 初始化uniCloud\r\n * @param {boolean} force 是否强制重新初始化\r\n */\r\nexport function initUniCloud(force = false) {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      // 检查运行环境\r\n      const platform = uni.getSystemInfoSync().platform\r\n      const environment = process.env.NODE_ENV\r\n      \r\n      console.log(`[CloudInit] 运行环境: ${platform}, 构建环境: ${environment}`)\r\n      \r\n      // 检查 uniCloud 对象\r\n      if (typeof uniCloud === 'undefined') {\r\n        const error = 'uniCloud 对象未定义，请检查是否正确引入'\r\n        console.error(`[CloudInit] ${error}`)\r\n        reject(new Error(error))\r\n        return\r\n      }\r\n      \r\n      // 检查是否已经初始化（除非强制重新初始化）\r\n      if (!force && uniCloud.getCurrentUserInfo) {\r\n        try {\r\n          // 尝试获取当前用户信息来验证是否已初始化\r\n          console.log('[CloudInit] uniCloud 已初始化，跳过重复初始化')\r\n          resolve(true)\r\n          return\r\n        } catch (e) {\r\n          console.log('[CloudInit] uniCloud 未正确初始化，开始初始化')\r\n        }\r\n      }\r\n      \r\n      // 执行初始化\r\n      console.log('[CloudInit] 开始初始化 uniCloud...')\r\n      console.log('[CloudInit] 配置信息:', {\r\n        provider: CLOUD_CONFIG.provider,\r\n        spaceId: CLOUD_CONFIG.spaceId,\r\n        endpoint: CLOUD_CONFIG.endpoint\r\n      })\r\n      \r\n      uniCloud.init(CLOUD_CONFIG)\r\n      \r\n      console.log('[CloudInit] uniCloud 初始化完成')\r\n      \r\n      // 验证初始化是否成功\r\n      setTimeout(() => {\r\n        testCloudConnection()\r\n          .then((success) => {\r\n            if (success) {\r\n              console.log('[CloudInit] 云函数连接测试成功')\r\n              resolve(true)\r\n            } else {\r\n              console.warn('[CloudInit] 云函数连接测试失败，但初始化完成')\r\n              resolve(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.warn('[CloudInit] 云函数连接测试异常:', error.message)\r\n            resolve(false)\r\n          })\r\n      }, 1000)\r\n      \r\n    } catch (error) {\r\n      const errorMsg = `uniCloud 初始化失败: ${error.message}`\r\n      console.error(`[CloudInit] ${errorMsg}`)\r\n      reject(new Error(errorMsg))\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 测试云函数连接\r\n */\r\nexport function testCloudConnection() {\r\n  return new Promise((resolve) => {\r\n    try {\r\n      console.log('[CloudTest] 开始测试云函数连接...')\r\n      \r\n      uniCloud.callFunction({\r\n        name: 'room-management',\r\n        data: {\r\n          action: 'getRooms',\r\n          data: { pageSize: 1, pageNum: 1 }\r\n        }\r\n      }).then((result) => {\r\n        console.log('[CloudTest] 云函数调用成功:', result)\r\n        resolve(true)\r\n      }).catch((error) => {\r\n        console.error('[CloudTest] 云函数调用失败:', error)\r\n        resolve(false)\r\n      })\r\n      \r\n    } catch (error) {\r\n      console.error('[CloudTest] 云函数连接测试异常:', error)\r\n      resolve(false)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 获取当前运行环境信息\r\n */\r\nexport function getEnvironmentInfo() {\r\n  try {\r\n    const systemInfo = uni.getSystemInfoSync()\r\n    return {\r\n      platform: systemInfo.platform,\r\n      system: systemInfo.system,\r\n      version: systemInfo.version,\r\n      SDKVersion: systemInfo.SDKVersion,\r\n      environment: process.env.NODE_ENV,\r\n      uniCloudAvailable: typeof uniCloud !== 'undefined'\r\n    }\r\n  } catch (error) {\r\n    console.error('[CloudInit] 获取环境信息失败:', error)\r\n    return {\r\n      platform: 'unknown',\r\n      environment: process.env.NODE_ENV,\r\n      uniCloudAvailable: typeof uniCloud !== 'undefined'\r\n    }\r\n  }\r\n}"],"names":["uni","uniCloud"],"mappings":";;AAMA,MAAM,eAAe;AAAA,EACnB,UAAU;AAAA,EACV,SAAS;AAAA,EACT,cAAc;AAAA,EACd,UAAU;AACZ;AAMgB,SAAA,aAAa,QAAQ,OAAO;AAC1C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAClC,QAAA;AAEI,YAAA,WAAWA,cAAAA,MAAI,kBAAA,EAAoB;AACzC,YAAM,cAAc;AAEpBA,0BAAA,MAAA,OAAA,6BAAY,qBAAqB,QAAQ,WAAW,WAAW,EAAE;AAG7D,UAAA,OAAOC,qBAAa,aAAa;AACnC,cAAM,QAAQ;AACdD,sBAAA,MAAA,MAAA,SAAA,6BAAc,eAAe,KAAK,EAAE;AAC7B,eAAA,IAAI,MAAM,KAAK,CAAC;AACvB;AAAA,MACF;AAGI,UAAA,CAAC,SAASC,cAAA,GAAS,oBAAoB;AACrC,YAAA;AAEFD,wBAAAA,MAAA,MAAA,OAAA,6BAAY,mCAAmC;AAC/C,kBAAQ,IAAI;AACZ;AAAA,iBACO,GAAG;AACVA,wBAAAA,MAAA,MAAA,OAAA,6BAAY,mCAAmC;AAAA,QACjD;AAAA,MACF;oEAGY,+BAA+B;AAC3CA,oBAAAA,MAAA,MAAA,OAAA,6BAAY,qBAAqB;AAAA,QAC/B,UAAU,aAAa;AAAA,QACvB,SAAS,aAAa;AAAA,QACtB,UAAU,aAAa;AAAA,MAAA,CACxB;AAEDC,uBAAS,KAAK,YAAY;AAEdD,oBAAAA,MAAA,MAAA,OAAA,6BAAA,4BAA4B;AAGxC,iBAAW,MAAM;AACK,4BAAA,EACjB,KAAK,CAAC,YAAY;AACjB,cAAI,SAAS;0EACC,uBAAuB;AACnC,oBAAQ,IAAI;AAAA,UAAA,OACP;2EACQ,8BAA8B;AAC3C,oBAAQ,KAAK;AAAA,UACf;AAAA,QAAA,CACD,EACA,MAAM,CAAC,UAAU;AAChBA,wBAAA,MAAA,MAAA,QAAA,6BAAa,0BAA0B,MAAM,OAAO;AACpD,kBAAQ,KAAK;AAAA,QAAA,CACd;AAAA,SACF,GAAI;AAAA,aAEA,OAAO;AACR,YAAA,WAAW,mBAAmB,MAAM,OAAO;AACjDA,oBAAA,MAAc,MAAA,SAAA,6BAAA,eAAe,QAAQ,EAAE;AAChC,aAAA,IAAI,MAAM,QAAQ,CAAC;AAAA,IAC5B;AAAA,EAAA,CACD;AACH;AAKO,SAAS,sBAAsB;AAC7B,SAAA,IAAI,QAAQ,CAAC,YAAY;AAC1B,QAAA;AACUA,oBAAAA,MAAA,MAAA,OAAA,6BAAA,0BAA0B;AAEtCC,oBAAAA,GAAS,aAAa;AAAA,QACpB,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,QAAQ;AAAA,UACR,MAAM,EAAE,UAAU,GAAG,SAAS,EAAE;AAAA,QAClC;AAAA,MAAA,CACD,EAAE,KAAK,CAAC,WAAW;AAClBD,sBAAA,MAAA,MAAA,OAAA,8BAAY,wBAAwB,MAAM;AAC1C,gBAAQ,IAAI;AAAA,MAAA,CACb,EAAE,MAAM,CAAC,UAAU;AAClBA,sBAAA,MAAA,MAAA,SAAA,8BAAc,wBAAwB,KAAK;AAC3C,gBAAQ,KAAK;AAAA,MAAA,CACd;AAAA,aAEM,OAAO;AACdA,oBAAA,mDAAc,0BAA0B,KAAK;AAC7C,cAAQ,KAAK;AAAA,IACf;AAAA,EAAA,CACD;AACH;;"}